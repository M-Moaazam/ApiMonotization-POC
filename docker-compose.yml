version: "3.9"

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: "Password@123"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Password@123 -Q 'SELECT 1' || exit 1"]
      interval: 20s
      timeout: 10s
      retries: 10
      start_period: 40s

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  gateway:
    build:
      context: .
      dockerfile: Gateway.Api/Dockerfile
    depends_on:
      sqlserver:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      ConnectionStrings__DefaultConnection: "Server=sqlserver,1433;Database=ApiMonetizationDb;User Id=sa;Password=Password@123;TrustServerCertificate=True;"
      Redis__Connection: "redis:6379"
    ports:
      - "5000:80"

  unit-tests:
    build:
      context: .
      dockerfile: Gateway.Tests.Unit/Dockerfile
    command: ["dotnet", "test", "--logger:trx"]
    depends_on: [] # does not need DB or Redis
    # runs immediately on build

  integration-tests:
    build:
      context: .
      dockerfile: Gateway.Tests.Integration/Dockerfile
    command: ["dotnet", "test", "--logger:trx"]
    depends_on:
      sqlserver:
        condition: service_healthy
      redis:
        condition: service_started
      gateway:
        condition: service_started
    environment:
      ConnectionStrings__DefaultConnection: "Server=sqlserver,1433;Database=ApiMonetizationDb;User Id=sa;Password=Password@123;TrustServerCertificate=True;"
      Redis__Connection: "redis:6379"
